name: Test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  output:
    runs-on: ubuntu-latest
    name: Output event
    steps:
      - name: Event Context
        id: event_context
        run: echo '${{ toJson(github.event) }}'

      - name: Github Context
        id: github_context
        run: echo '${{ toJson(github) }}'

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('Event Context Output')
            })

            const output = `<details><summary>Event Context Output</summary>

            \`\`\`\n
            ${{ toJson(github.event) }}
            \`\`\`


            </details>

            <details><summary>Github Context Output</summary>

            \`\`\`\n
            ${{ toJson(github) }}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

